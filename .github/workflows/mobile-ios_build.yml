name: Mobile/iOS build

permissions:
  contents: read

on:
  workflow_run:
    workflows:
    - Request
    types:
    - completed


jobs:
  load:
    secrets:
      app-key: ${{ secrets.ENVOY_CI_APP_KEY }}
      app-id: ${{ secrets.ENVOY_CI_APP_ID }}
      lock-app-key: ${{ secrets.ENVOY_CI_MUTEX_APP_KEY }}
      lock-app-id: ${{ secrets.ENVOY_CI_MUTEX_APP_ID }}
    permissions:
      actions: read
      contents: read
      packages: read
      pull-requests: read
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/_load.yml
    with:
      cache-docker: false
      check-name: mobile-ios

  build:
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_run.yml
    if: ${{ fromJSON(needs.load.outputs.request).run.mobile-ios }}
    needs: load
    name: ios-build
    with:
      args: ${{ matrix.args }}
      command: ./bazelw
      container-command:
      request: ${{ needs.load.outputs.request }}
      runs-on: macos-12
      source: |
        ./ci/mac_ci_setup.sh
        ./bazelw shutdown
      steps-post: ${{ matrix.steps-post }}
      target: ${{ matrix.target }}
      timeout-minutes: ${{ matrix.timeout-minutes }}
      trusted: ${{ fromJSON(needs.load.outputs.trusted) }}
      working-directory: mobile
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Build Envoy.framework distributable
          args: >-
            build
            --config=ios
            --config=mobile-remote-ci-macos
            //library/swift:ios_framework
          target: ios
          timeout-minutes: 120

  hello-world:
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_run.yml
    if: ${{ fromJSON(needs.load.outputs.request).run.mobile-ios }}
    needs:
    - load
    # - build
    name: ios-hello-world
    with:
      args: ${{ matrix.args }}
      command: ./bazelw
      container-command:
      request: ${{ needs.load.outputs.request }}
      runs-on: macos-12
      source: |
        ./ci/mac_ci_setup.sh
        ./bazelw shutdown
      steps-post: ${{ matrix.steps-post }}
      target: ${{ matrix.target }}
      timeout-minutes: ${{ matrix.timeout-minutes }}
      trusted: ${{ fromJSON(needs.load.outputs.trusted) }}
      working-directory: mobile
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Build swift hello world
          args: >-
            build
            --config=ios
            --config=mobile-remote-ci-macos
            //examples/swift/hello_world:app
          steps-post: |
            - uses: envoyproxy/toolshed/gh-actions/envoy/ios/post@actions-v0.2.13
              with:
                app: //examples/swift/hello_world:app
                status: 200
          target: swift-hello-world
          timeout-minutes: 50

  apps:
    permissions:
      contents: read
      packages: read
    uses: ./.github/workflows/_run.yml
    if: ${{ fromJSON(needs.load.outputs.request).run.mobile-ios-all }}
    needs:
    - load
    - build
    name: ios-apps
    with:
      args: ${{ matrix.args }}
      command: ./bazelw
      container-command:
      request: ${{ needs.load.outputs.request }}
      runs-on: macos-12
      source: |
        ./ci/mac_ci_setup.sh
      steps-post: ${{ matrix.steps-post }}
      target: ${{ matrix.target }}
      timeout-minutes: 50
      trusted: ${{ fromJSON(needs.load.outputs.trusted) }}
      working-directory: mobile
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Build swift baseline app
          args: >-
            --config=ios
            --config=mobile-remote-ci-macos
            //test/swift/apps/baseline:app
          steps-post: |
            - uses: envoyproxy/toolshed/gh-actions/envoy/ios/post@actions-v0.2.13
              with:
                app: //test/swift/apps/baseline:app
                status: 200
          target: swift-baseline-app
        - name: Build swift experimental app
          args: >-
            build
            --config=ios
            --config=mobile-remote-ci-macos
            --define=admin_functionality=enabled
            //test/swift/apps/experimental:app
          steps-post: |
            - uses: envoyproxy/toolshed/gh-actions/envoy/ios/post@actions-v0.2.13
              with:
                app: //test/swift/apps/experimental:app
                args: >-
                  --config=ios
                  --config=mobile-remote-ci-macos
                  --define=admin_functionality=enabled
                status: 200
          target: swift-experimental-app
        - name: Build swift async await
          args: >-
            build
            --config=ios
            --config=mobile-remote-ci-macos
            //examples/swift/async_await:app
          steps-post: |
            - uses: envoyproxy/toolshed/gh-actions/envoy/ios/post@actions-v0.2.13
              with:
                app: //examples/swift/async_await:app
          target: swift-async-await
        - name: Build objc hello world
          args: >-
            --config=ios
            --config=mobile-remote-ci-macos
            //examples/objective-c/hello_world:app
          steps-post: |
            - uses: envoyproxy/toolshed/gh-actions/envoy/ios/post@actions-v0.2.13
              with:
                app: //examples/objective-c/hello_world:app
                status: 301
          target: objc-hello-world

  request:
    secrets:
      app-id: ${{ secrets.ENVOY_CI_APP_ID }}
      app-key: ${{ secrets.ENVOY_CI_APP_KEY }}
    permissions:
      actions: read
      contents: read
      pull-requests: read
    if: >-
      ${{ always()
          && github.event.workflow_run.conclusion == 'success'
          && fromJSON(needs.load.outputs.request).run.mobile-ios }}
    needs:
    - load
    - build
    - hello-world
    - apps
    uses: ./.github/workflows/_finish.yml
    with:
      needs: ${{ toJSON(needs) }}
