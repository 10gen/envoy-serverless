name: Publish

permissions:
  contents: read

# The matrices in this config can be combined once the calling workflow has shifted
# to a `pull_request`/`commit` pattern (ie not `workflow_dispatch`)
#
# For now pre/post submit is split between `publish_ci`/`publish`, the latter running
# only for "trusted" runs and having access to secrets/permissions

on:
  workflow_call:
    inputs:
      trusted:
        type: boolean
        default: false
      build_image_ubuntu:
        type: string
        default: ''
      version-dev:
        type: string
        default: ''
      head_ref:
        type: string
        default: ''
      repo-ref:
        type: string
      sha:
        type: string
    secrets:
      ENVOY_CI_SYNC_APP_ID:
      ENVOY_CI_SYNC_APP_KEY:
      ENVOY_CI_PUBLISH_APP_ID:
      ENVOY_CI_PUBLISH_APP_KEY:

concurrency:
  group: ${{ github.head_ref || github.run_id }}-${{ github.workflow }}-publish
  cancel-in-progress: true

jobs:
  publish_ci:
    if: ${{ ! inputs.trusted }}
    name: ${{ matrix.name || matrix.target }}
    uses: ./.github/workflows/_ci.yml
    with:
      target: ${{ matrix.target }}
      rbe: false
      cache-build-image: ${{ inputs.build_image_ubuntu }}
      source: ${{ matrix.source }}
      trusted: false
      repo-ref: ${{ inputs.repo-ref }}
      steps-pre: ${{ matrix.steps-pre }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: publish
          name: github
          steps-pre: |
            - id: short_name
              uses: envoyproxy/toolshed/gh-actions/str/sub@actions-v0.1.2
              with:
                length: 7
                string: ${{ inputs.repo-ref }}
                min: 40
            - uses: envoyproxy/toolshed/gh-actions/fetch@actions-v0.1.2
              with:
                url: https://storage.googleapis.com/envoy-pr/%{{ steps.short_name.outputs.string }}/release/release.signed.tar.zst
                path: %{{ runner.temp }}/release.signed
          source: |
            export ENVOY_PUBLISH_DRY_RUN=1
            export ENVOY_COMMIT=${{ inputs.sha }}
            export ENVOY_REPO=${{ github.repository }}

  publish:
    if: ${{ inputs.trusted }}
    name: ${{ matrix.name || matrix.target }}
    uses: ./.github/workflows/_ci.yml
    with:
      target: ${{ matrix.target }}
      rbe: false
      cache-build-image: ${{ inputs.build_image_ubuntu }}
      source: ${{ matrix.source }}
      trusted: true
      repo-ref: ${{ inputs.repo-ref }}
      steps-pre: ${{ inputs.steps-pre }}
    secrets:
      app-id: ${{ secrets.ENVOY_CI_PUBLISH_APP_ID }}
      app-key: ${{ secrets.ENVOY_CI_PUBLISH_APP_KEY }}
    permissions:
      contents: read
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: publish
          name: github
          steps-pre: |
            - id: short_name
              uses: envoyproxy/toolshed/gh-actions/str/sub@actions-v0.1.2
              with:
                length: 7
                input: ${{ inputs.repo-ref }}
            - uses: envoyproxy/toolshed/gh-actions/fetch@actions-v0.1.2
              with:
                url: https://storage.googleapis.com/envoy-postsubmit/%{{ steps.short_name.outputs.string }}/release/release.signed.tar.zst
                path: %{{ runner.temp }}/release.signed
          source: |
            export ENVOY_COMMIT=${{ inputs.sha }}
            if [[ '${{ inputs.version-dev }}' == 'dev' ]]; then
                export ENVOY_PUBLISH_DRY_RUN=1
            fi

  publish_docs:
    # For normal commits to Envoy main this will trigger an update in the website repo,
    # which will update its envoy dep shas, and rebuild the website for the latest docs
    #
    # For commits that create a release, it instead triggers an update in the archive repo,
    # which builds a static version of the docs for the release and commits it to the archive.
    # In turn the archive repo triggers an update in the website so the new release docs are
    # included in the published site
    if: ${{ inputs.trusted && github.repository == 'envoyproxy/envoy' }}
    runs-on: ubuntu-22.04
    needs:
    - publish
    steps:
    - uses: envoyproxy/toolshed/gh-actions/dispatch@actions-v0.1.5
      with:
        app_id: ${{ secrets.ENVOY_CI_SYNC_APP_ID }}
        key: "${{ secrets.ENVOY_CI_SYNC_APP_KEY }}"
        ref: main
        repository: ${{ inputs.version-dev == 'dev' && 'envoyproxy/envoy-website' || 'envoyproxy/archive' }}
        workflow: envoy-sync.yaml
        inputs: |
          commit_sha: ${{ inputs.version-dev == 'dev' && github.sha || '' }}
