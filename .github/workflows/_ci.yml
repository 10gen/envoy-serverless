name: Envoy CI

on:
  workflow_call:
    secrets:
      app-id:
      app-key:
      rbe-key:
    inputs:
      bazel-extra:
        type: string
      bazel-rbe-jobs:
        type: number
        default: 75
      cache-build-image:
        type: string
      catch-errors:
        type: boolean
        default: false
      command-prefix:
        type: string
        default: ./ci/run_envoy_docker.sh
      command-ci:
        type: string
        default: ./ci/do_ci.sh
      diskspace-hack:
        type: boolean
        default: false
      error-match:
        type: string
        default: |
          ERROR
      notice-match:
        type: string
        default: |
          NOTICE
      rbe:
        type: boolean
        default: true
      repo-fetch-depth:
        type: number
        default: 1
      repo-ref:
        type: string
      runs-on:
        type: string
        default: ubuntu-22.04
      skip:
        type: boolean
        default: false
      source:
        type: string
      steps-pre:
        type: string
      steps-pre-name:
        type: string
      steps-post:
        type: string
        default: |
          - run: |
              du -ch "%{{ inputs.temp-dir || runner.temp }}" | grep -E "[0-9]{2,}M|[0-9]G"
            shell: bash
      steps-post-name:
        type: string
      target:
        type: string
        required: true
      temp-dir:
        type: string
      trusted:
        type: boolean
        default: false
      upload-name:
        type: string
      upload-path:
        type: string
      warning-match:
        type: string
        default: |
          WARNING

concurrency:
  group: |
    ${{ github.actor != 'trigger-release-envoy[bot]'
        && github.event.inputs.head_ref
        || github.run_id
    }}-${{ github.workflow }}-${{ inputs.target }}
  cancel-in-progress: true

jobs:
  do_ci:
    if: ${{ ! inputs.skip }}
    runs-on: ${{ inputs.runs-on }}
    name: ${{ inputs.command-ci }} ${{ inputs.target }}
    steps:
    - if: ${{ inputs.cache-build-image }}
      name: Restore Docker cache ${{ inputs.cache-build-image && format('({0})', inputs.cache-build-image) || '' }}
      uses: envoyproxy/toolshed/gh-actions/docker/cache/restore@actions-v0.1.5
      with:
        image_tag: ${{ inputs.cache-build-image }}

    - uses: envoyproxy/toolshed/gh-actions/github/checkout@actions-v0.1.5
      id: checkout
      name: Checkout Envoy repository
      with:
        app_id: ${{ inputs.trusted && secrets.app-id || '' }}
        app_key: ${{ inputs.trusted && secrets.app-key || '' }}
        config: |
          fetch-depth: ${{ ! inputs.trusted && inputs.repo-fetch-depth || 0 }}
          # WARNING: This allows untrusted code to run!!!
          #  If this is set, then anything before or after in the job should be regarded as
          #  compromised.
          ref: ${{ ! inputs.trusted && inputs.repo-ref || github.ref }}

    # If we are in a trusted CI run then the provided commit _must_ be either the latest for
    # this branch, or an antecdent.
    - run: |
        if ! git merge-base --is-ancestor "${{ inputs.repo-ref }}" HEAD; then
            echo "Provided Envoy ref (${{ inputs.repo-ref }}) is not an ancestor of current branch" >&2
            exit 1
        fi
        git checkout "${{ inputs.repo-ref }}"
      if: ${{ inputs.trusted }}
      name: Check provided ref
      shell: bash

    - name: Add safe directory
      run: git config --global --add safe.directory /__w/envoy/envoy

    - if: ${{ inputs.diskspace-hack }}
      name: Free diskspace
      uses: envoyproxy/toolshed/gh-actions/diskspace@actions-v0.1.5
    - run: |
        echo "disk space at beginning of build:"
        df -h
      name: "Check disk space at beginning"
      shell: bash

    - uses: envoyproxy/toolshed/gh-actions/using/steps@actions-v0.1.5
      name: Run pre steps
      if: ${{ inputs.steps-pre }}
      with:
        name: ${{ inputs.steps-pre-name }}
        steps: ${{ inputs.steps-pre }}

    - uses: envoyproxy/toolshed/gh-actions/github/run@actions-v0.1.5
      name: 'Run CI target ${{ inputs.target }}'
      with:
        catch-errors: ${{ inputs.catch-errors }}
        container-command: ${{ inputs.command-prefix }}
        command-prefix: ${{ inputs.command-ci }}
        command: ${{ inputs.target }}
        source: ${{ inputs.source }}
        error-match: ${{ inputs.error-match }}
        notice-match: ${{ inputs.notice-match }}
        warning-match: ${{ inputs.warning-match }}
      env:
        GITHUB_TOKEN: ${{ steps.checkout.outputs.token != '' && steps.checkout.outputs.token || secrets.GITHUB_TOKEN }}
        ENVOY_DOCKER_BUILD_DIR: ${{ runner.temp }}
        ENVOY_RBE: ${{ inputs.rbe != 'false' && 1 || '' }}
        RBE_KEY: ${{ secrets.rbe-key }}
        BAZEL_BUILD_EXTRA_OPTIONS: >-
          --config=remote-ci
          ${{ inputs.bazel-extra }}
          ${{ inputs.rbe != 'false' && format('--jobs={0}', inputs.bazel-rbe-jobs) || '' }}
        BAZEL_FAKE_SCM_REVISION: ${{ github.event_name == 'pull_request' && 'e3b4a6e9570da15ac1caffdded17a8bebdc7dfc9' || '' }}
        CI_TARGET_BRANCH: ${{ github.event_name == 'pull_request' && github.event.base.ref || github.ref }}

    - uses: envoyproxy/toolshed/gh-actions/using/steps@actions-v0.1.5
      name: Run post steps
      if: ${{ inputs.steps-post }}
      with:
        name: ${{ inputs.steps-post-name }}
        steps: ${{ inputs.steps-post }}

    - run: |
        echo "disk space at end of build:"
        df -h
      name: "Check disk space at end"
      shell: bash

    - uses: actions/upload-artifact@v3
      name: Upload artefacts
      if: ${{ inputs.upload-name && inputs.upload-path }}
      with:
        name: ${{ inputs.upload-name }}
        path: ${{ inputs.upload-path }}
