name: Verify/examples

on:
  # This runs untrusted code, do not expose secrets in the verify job
  workflow_dispatch:
    inputs:
      ref:
        description: "Git SHA ref to checkout"
      sha:
        description: "Git SHA of commit HEAD (ie last commit of PR)"
      head_ref:
        description: "Ref for grouping PRs"

concurrency:
  group: ${{ github.event.inputs.head_ref || github.run_id }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check:
    if: |
      ${{
          github.repository == 'envoyproxy/envoy'
          && (!contains(github.actor, '[bot]')
              || github.actor == 'trigger-workflow-envoy[bot]')
      }}
    uses: ./.github/workflows/workflow-start.yml
    permissions:
      contents: read
      statuses: write
    with:
      workflowName: ${{ github.workflow }}

  # Runs untrusted code
  verify-examples:
    runs-on: ubuntu-20.04
    needs: check
    steps:
    # Checkout the repo at provided commit
    - name: 'Checkout Repository'
      uses: actions/checkout@v3
      with:
        ref: "${{ inputs.ref }}"

    - run: |
        set -e

        BUCKET="envoy-postsubmit"
        PULL_REGEX="^refs/pull/*"
        if [[ "${{ inputs.head_ref }}" =~ ${PULL_REGEX} ]]; then
            BUCKET="envoy-pr"
        fi

        DOWNLOAD_PATH="$(echo "${{ inputs.ref }}" | head -c 7)"

        tmpdir=$(mktemp -d)
        cd "$tmpdir"
        images=("" "contrib" "google-vrp")
        for image in "${images[@]}"; do
            if [[ -n "$image" ]]; then
                variant="${image}-dev"
                filename="envoy-${image}.tar"
            else
                variant=dev
                filename="envoy.tar"
            fi
            fileurl="https://storage.googleapis.com/${BUCKET}/${DOWNLOAD_PATH}/docker/${filename}"
            echo "Download docker image (${fileurl}) ..."
            curl -sLO "$fileurl"
            echo "Copy oci image: oci-archive:${filename} docker-daemon:envoyproxy/envoy:${variant}"
            skopeo copy -q "oci-archive:${filename}" "docker-daemon:envoyproxy/envoy:${variant}"
            rm "$filename"
        done
        docker images | grep envoy

    - run: |
        set -e
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get -qq update -y
        sudo apt-get -qq install -y --no-install-recommends expect

    - run: |
        ./ci/do_ci.sh verify_examples
      env:
        NO_BUILD_SETUP: 1
        # ENVOY_EXAMPLES_DEBUG: 1
