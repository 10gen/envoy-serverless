date: Pending

behavior_changes:
# *Changes that are expected to cause an incompatibility if applicable; deployment changes are likely required*
- area: http
  change: |
    Flip runtime flag ``envoy.reloadable_features.no_downgrade_to_canonical_name`` to true. Name downgrading in the
    per filter config searching will be disabled by default. This behavior can be temporarily reverted by setting
    the flag to false explicitly.
    See doc :ref:`Http filter route specific config <arch_overview_http_filters_per_filter_config>` or
    issue https://github.com/envoyproxy/envoy/issues/29461 for more specific detail and examples.
- area: listener
  change: |
    undeprecated runtime key ``overload.global_downstream_max_connections`` until :ref:`downstream connections monitor
    <envoy_v3_api_msg_extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig>` extension becomes stable.

minor_behavior_changes:
- area: upstream
  change: |
    Fixed a reported issue (https://github.com/envoyproxy/envoy/issues/11004) that causes the Least
    Request load balancer policy to be unfair when the number of hosts are very small, when the number
    of hosts is smaller than the choice_count, instead of randomly selection hosts from the list, we
    perform a full scan on it to choose the host with least requests.
# *Changes that may cause incompatibilities for some users, but should not for most*
- area: local_rate_limit
  change: |
    Added new configuration field :ref:`rate_limited_as_resource_exhausted
    <envoy_v3_api_field_extensions.filters.http.local_ratelimit.v3.LocalRateLimit.rate_limited_as_resource_exhausted>`
    to allow for setting if rate limit grpc response should be RESOURCE_EXHAUSTED instead of the default UNAVAILABLE.
- area: http2
  change: |
    Flip the runtime guard ``envoy.reloadable_features.defer_processing_backedup_streams`` to be on by default.
    This feature improves flow control within the proxy by deferring work on the receiving end if the other
    end is backed up.

bug_fixes:
# *Changes expected to improve the state of the world and are unlikely to have negative effects*
- area: xds
  change: |
    Fixed a bug (https://github.com/envoyproxy/envoy/issues/27702) that caused ADS initialization
    to fail on the first attempt and set a back-off retry interval of up to 1 second, if ADS is
    using an Envoy Cluster for the backend. The issue was fixed to ensure that ADS initialization
    happens after the Envoy Cluster it depends upon has been properly initialized. ADS that does
    not depend on an Envoy Cluster (i.e. GoogleGrpc) is not affected by this change.
- area: grpc
  change: |
    Fixed a bug in gRPC async client cache which intermittently causes CPU spikes due to busy loop in timer expiration.
- area: quic
  change: |
    Fixed a bug in QUIC and HCM interaction which could cause use-after-free during asynchronous certificates retrieval.
    The fix is guarded by runtime ``envoy.reloadable_features.quic_fix_filter_manager_uaf``.
- area: redis
  change: |
    Fixed a bug causing crash if incoming redis key does not match against a prefix_route and catch_all_route is not defined.

removed_config_or_runtime:
# *Normally occurs at the end of the* :ref:`deprecation period <deprecated>`
- area: http
  change: |
    Removed ``envoy.reloadable_features.expand_agnostic_stream_lifetime`` and legacy code paths.
- area: http
  change: |
    removed ``envoy.reloadable_features.correctly_validate_alpn`` and legacy code paths.
- area: maglev
  change: |
    Removed ``envoy.reloadable_features.allow_compact_maglev`` and legacy code paths.
- area: router
  change: |
    Removed the deprecated ``envoy.reloadable_features.prohibit_route_refresh_after_response_headers_sent``
    runtime flag and legacy code path.
- area: upstream
  change: |
    Removed the deprecated ``envoy.reloadable_features.validate_detailed_override_host_statuses``
    runtime flag and legacy code path.
- area: grpc
  change: |
    Removed the deprecated ``envoy.reloadable_features.service_sanitize_non_utf8_strings``
    runtime flag and legacy code path.
- area: access log
  change: |
    Removed the deprecated ``envoy.reloadable_features.format_ports_as_numbers``
    runtime flag and legacy code path.

new_features:
- area: filters
  change: |
    Added :ref:`the Basic Auth filter <envoy_v3_api_msg_extensions.filters.http.basic_auth.v3.BasicAuth>`, which can be used to
    authenticate user credentials in the HTTP Authentication heaer defined in `RFC7617 <https://tools.ietf.org/html/rfc7617>`_.
- area: upstream
  change: |
    Added :ref:`enable_full_scan <envoy_v3_api_msg_extensions.load_balancing_policies.least_request.v3.LeastRequest>`
    option to the least requested load balancer. If set to true, Envoy will perform a full scan on the list of hosts
    instead of using :ref:`choice_count
    <envoy_v3_api_msg_extensions.load_balancing_policies.least_request.v3.LeastRequest>`
    to select the hosts.
- area: stats
  change: |
    added :ref:`per_endpoint_stats <envoy_v3_api_field_config.cluster.v3.TrackClusterStats.per_endpoint_stats>` to get some metrics
    for each endpoint in a cluster.
- area: jwt
  change: |
    The jwt filter can now serialize non-primitive custom claims when maping claims to headers.
    These claims will be serialized as JSON and encoded as Base64.
- area: tcp_proxy
  change: |
    added support to TCP Proxy for recording the latency in ``UpstreamTiming`` from when the first
    initial connection to the upstream cluster was attempted to when either the
    connection was successfully established or the filiter failed to initialize
    any connection to the upstream.
- area: ratelimit
  change: |
    Ratelimit supports setting the HTTP status that is returned to the client when the ratelimit server
    returns an error or cannot be reached with :ref:`status_on_error
    <envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimit.status_on_error>`
    configuration flag.
- area: tracing
  change: |
    Added support for configuring resource detectors on the OpenTelemetry tracer.
- area: tracing
  change: |
    Added support to configure a sampler for the OpenTelemetry tracer.
- area: ext_authz
  change: |
    New config parameter :ref:`charge_cluster_response_stats
    <envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.charge_cluster_response_stats>`
    for not incrementing cluster statistics on ext_authz response. Default true, no behavior change.
- area: ext_authz
  change: |
    forward :ref:`filter_metadata <envoy_v3_api_field_config.core.v3.Metadata.filter_metadata>` selected by
    :ref:`route_metadata_context_namespaces
    <envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.route_metadata_context_namespaces>`
    and :ref:`typed_filter_metadata <envoy_v3_api_field_config.core.v3.Metadata.typed_filter_metadata>` selected by
    :ref:`route_typed_metadata_context_namespaces
    <envoy_v3_api_field_extensions.filters.http.ext_authz.v3.ExtAuthz.route_typed_metadata_context_namespaces>`
    from the metadata of the selected route to external auth service.
    This metadata propagation is independent from the dynamic metadata from connection and request.

deprecated:
