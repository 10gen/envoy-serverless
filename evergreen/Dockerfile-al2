FROM amazonlinux:2

RUN amazon-linux-extras install epel && yum install -y which jq
RUN yum groupinstall -y 'Development Tools'

# Add GitHub's keys to the SSH known hosts file.
RUN mkdir -p /root/.ssh && curl --silent https://api.github.com/meta | jq --raw-output '"github.com "+.ssh_keys[]' >> /root/.ssh/known_hosts

# Pre-pack the MongoDB toolchain into the Amazon Linux 2 image.
RUN curl -L -o mongodbtoolchain.tar.gz -L http://mongodbtoolchain.build.10gen.cc/toolchain/$([ $(uname -m) = "aarch64" ] && echo "amazon2-arm64" || echo "amazon2")/x86_64/latest && \
  mkdir -p /opt/mongodbtoolchain/revisions && \
  REVISION=$(tar --list -f mongodbtoolchain.tar.gz | head -1 | sed 's/\/$//') && \
  tar -C /opt/mongodbtoolchain/revisions -xzvf mongodbtoolchain.tar.gz $REVISION && \
  /opt/mongodbtoolchain/revisions/$REVISION/scripts/install.sh && \
  rm mongodbtoolchain.tar.gz
ENV PATH="/opt/mongodbtoolchain/v4/bin:$PATH"
ENV LD_LIBRARY_PATH="/opt/mongodbtoolchain/v4/lib"
ENV CC="/opt/mongodbtoolchain/v4/bin/clang"
ENV CXX="/opt/mongodbtoolchain/v4/bin/clang++"

# Install Bazel.
RUN curl -L -o /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.9.0/bazelisk-linux-$([ $(uname -m) = "aarch64" ] && echo "arm64" || echo "amd64") && \
  chmod +x /usr/local/bin/bazel

# Silence the error that Git detected dubious ownership in the repository.
RUN git config --global --add safe.directory '*'

# Install m, the MongoDB version manager.
RUN curl -L -o /usr/local/bin/m https://raw.githubusercontent.com/aheckmann/m/master/bin/m && \
  chmod 755 /usr/local/bin/m
ENV M_PREFIX="/root/.m"
ENV M_CONFIRM=0
ENV PATH="$M_PREFIX/bin:$PATH"
ENV MONGO_DIR="/root/.m/bin"

# Install mongosh.
RUN curl -L -o mongosh.tar.gz https://downloads.mongodb.com/compass/mongosh-1.8.0-linux-$([ $(uname -m) = "aarch64" ] && echo "arm64" || echo "x64").tgz && \
  tar -C /usr/local/lib -xzvf mongosh.tar.gz && \
  chmod 755 /usr/local/lib/mongosh-1.8.0-linux-$([ $(uname -m) = "aarch64" ] && echo "arm64" || echo "x64")/bin/mongosh && \
  ln -s /usr/local/lib/mongosh-1.8.0-linux-$([ $(uname -m) = "aarch64" ] && echo "arm64" || echo "x64")/bin/mongosh /usr/local/bin/mongosh && \
  rm mongosh.tar.gz

# Install go.
RUN curl -L -o go.tar.gz https://go.dev/dl/go1.20.2.linux-$([ $(uname -m) = "aarch64" ] && echo "arm64" || echo "amd64").tar.gz && \
  tar -C /usr/local -xzvf go.tar.gz && \
  rm go.tar.gz
ENV PATH="$PATH:/usr/local/go/bin"
ENV GOROOT="/usr/local/go"
ENV GOPATH="/root/.local/gopath"
ENV GOPROXY="https://:@artifactory.corp.mongodb.com/artifactory/api/go/go,direct"

# Allow go modules to work with private repositories.
ENV GOPRIVATE="github.com/10gen/cloud-agent-common,github.com/10gen/bsonio,github.com/10gen/bsonutil"
RUN git config --global url."ssh://git@github.com/10gen/cloud-agent-common".insteadOf "https://github.com/10gen/cloud-agent-common" && \
  git config --global url."ssh://git@github.com/10gen/bsonio".insteadOf "https://github.com/10gen/bsonio" && \
  git config --global url."ssh://git@github.com/10gen/bsonutil".insteadOf "https://github.com/10gen/bsonutil"

# Add Atlas Proxy environment variables for serverless.
ENV SERVERLESS_MODE=true
ENV SERVERLESS_METRICS_MODE=true
ENV ENFORCE_LOAD_BALANCED_CONNECTIONS=true
