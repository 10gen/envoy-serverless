tasks:
- name: compile
  tags: ["pr_check"]
  depends_on:
    - name: docker_build
      variant: "*"
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "compile envoy"
    - func: "archive"
    - func: "s3 upload archive"

- name: test
  tags: ["pr_check"]
  depends_on:
    - name: docker_build
      variant: "*"
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "test envoy"

- name: push
  patchable: false
  depends_on:
    - name: compile
  commands:
    - func: "create push credentials"
    - func: "s3 push archive"

- name: docker_build
  tags: ["pr_check"]
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "build and push docker image"

functions:
  "git get project":
    command: git.get_project
    type: setup
    params:
      directory: src

  "compile envoy":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --pull-docker-image --run-script ./evergreen/compile.sh --mount-build-dir ./build --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

  "test envoy":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --pull-docker-image --run-script ./evergreen/test.sh --mount-build-dir ./build --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

  "archive":
    command: subprocess.exec
    params:
      binary: bash
      args:
      - "src/evergreen/archive_evergreen.sh"
      env:
        DISTRO: ${distro}
        ARCH: ${arch}

  # Upload archives to the S3 directory for this build.
  "s3 upload archive":
    command: s3.put
    params:
      aws_key: ${SECRET_release_aws_key}
      aws_secret: ${SECRET_release_aws_secret}
      bucket: mongodb-mms-build-envoy-serverless
      local_files_include_filter: ["*.tar.gz"]
      local_files_include_filter_prefix: "archive"
      remote_file: build/${build_id}/
      permissions: public-read
      content_type: "application/x-gzip"

  "create push credentials":
    command: shell.exec
    params:
      working_dir: .
      script: |
        set -e
        # Create a config file for AWS S3 CLI
        echo "creating config file"
        echo "[default]" > conf.aws
        chmod 700 conf.aws
        echo aws_access_key_id=${SECRET_release_aws_key} >> conf.aws
        echo aws_secret_access_key=${SECRET_release_aws_secret} >> conf.aws
        # Create a credentials file for AWS S3 CLI
        echo "creating credentials file"
        echo "[default]" > cred.aws
        chmod 700 cred.aws
        echo region=us-east-1 >> cred.aws

  "s3 push archive":
    - command: shell.exec
      params:
        working_dir: .
        script: |
          set -evx
          # Export the config file location
          export CONFIG_DIR=`pwd`
          export AWS_CONFIG_FILE=$CONFIG_DIR/conf.aws
          export AWS_CREDENTIAL_FILE=$CONFIG_DIR/cred.aws
          export BUCKET=mongodb-mms-build-envoy-serverless
          # Copy binary archives from build directory to tarballs directory
          aws s3 ls s3://$BUCKET/build/${build_id}/  \
            | awk '{print $NF}'  \
            | grep "envoy-serverless-.*\.tar\.gz"  \
            | xargs -I{} -n1 aws s3 cp s3://$BUCKET/build/${build_id}/{} s3://$BUCKET/tarballs/ --acl public-read

  "install podman":
    command: shell.exec
    type: setup
    params:
      working_dir: src
      shell: bash
      script: |
        set -xeuo pipefail
        sudo yum install -y podman fuse-overlayfs conmon
        mkdir ./build

  "build and push docker image":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --build-docker-image --push-docker-image --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

buildvariants:
- name: centos7
  tags: ["pr_check"]
  display_name: CentOS 7 x86_64
  run_on:
    # Tasks run in x86 CentOS7 containers, so the Linux distro doesn't have to match.
    - rhel80-xlarge
  expansions:
    distro: rhel7
    arch: x86_64
  tasks:
  - name: docker_build
  - name: compile
  # CLOUDP-184237: Only run envoy tests on al2-aarch64. 
  # - name: test 
  - name: push

- name: al2-aarch64
  tags: ["pr_check"]
  display_name: Amazon Linux 2 aarch64
  run_on:
    # Tasks run in Amazon Linux 2 containers, so the Linux distro doesn't have to match.
    - rhel82-arm64-large
  expansions:
    distro: al2
    arch: aarch64
  tasks:
  - name: docker_build
  - name: compile
  - name: test
  - name: push
