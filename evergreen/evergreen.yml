exec_timeout_secs: 14400 # Tasks will time out after 4 hours.

variables:
- &amazon_linux2_aarch64
  distro: al2
  arch: aarch64
- &amazon_linux2_x86_64
  distro: al2
  arch: x86_64
- &amazon_linux2023_aarch64
  distro: al2023
  arch: aarch64
- &amazon_linux2023_x86_64
  distro: al2023
  arch: x86_64

tasks:
- name: compile
  tags: ["pr_check"]
  depends_on:
    - name: docker_build
      variant: "*"
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "compile envoy"
    - func: "archive envoy"
    - func: "s3 upload archive"

- name: test
  tags: ["pr_check"]
  depends_on:
    - name: docker_build
      variant: "*"
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "test envoy"

- name: docker_build
  tags: ["pr_check"]
  commands:
    - func: "git get project"
    - func: "install podman"
    - func: "build and push docker image"

functions:
  "git get project":
    command: git.get_project
    type: setup
    params:
      directory: src

  "compile envoy":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --pull-docker-image --run-script ./evergreen/compile.sh --mount-build-dir ./build --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

  "test envoy":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --pull-docker-image --run-script ./evergreen/test.sh --mount-build-dir ./build --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

  "archive envoy":
    command: subprocess.exec
    params:
      binary: bash
      args:
      - "src/evergreen/archive_evergreen.sh"
      env:
        DISTRO: ${distro}
        ARCH: ${arch}

  # Upload archives to the S3 directory for this build.
  "s3 upload archive":
    command: s3.put
    params:
      aws_key: ${SECRET_release_aws_key}
      aws_secret: ${SECRET_release_aws_secret}
      bucket: mongodb-mms-build-envoy-serverless
      local_files_include_filter: ["*.tar.gz"]
      local_files_include_filter_prefix: "archive"
      remote_file: build/${build_id}/
      permissions: public-read
      content_type: "application/x-gzip"

  "install podman":
    command: shell.exec
    type: setup
    params:
      working_dir: src
      shell: bash
      script: |
        set -xeuo pipefail
        sudo yum install --nobest -y podman fuse-overlayfs conmon
        mkdir ./build

  "build and push docker image":
    command: subprocess.exec
    params:
      working_dir: src
      shell: bash
      binary: scripts/aws_ecr.sh --distro ${distro} --build-docker-image --push-docker-image --use-podman --print-trace
      env:
        # Set the AWS access/secret keys of evergreen_serverless_proxy_test_user as environment variables.
        # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-methods.
        AWS_ACCESS_KEY_ID: ${SECRET_serverless_proxy_aws_key}
        AWS_SECRET_ACCESS_KEY: ${SECRET_serverless_proxy_secret_key}

buildvariants:
- name: al2-aarch64
  tags: ["pr_check"]
  display_name: Amazon Linux 2 (aarch64)
  run_on:
    # Tasks run in Amazon Linux 2 containers, so the Linux distro doesn't have to match.
    - rhel92-arm64-large
  expansions:
    <<: [*amazon_linux2_aarch64]
  tasks:
  - name: docker_build
  - name: compile
  - name: test

- name: al2-x86_64
  tags: ["pr_check"]
  display_name: Amazon Linux 2 (x86_64)
  run_on:
    # Tasks run in Amazon Linux 2 containers, so the Linux distro doesn't have to match.
    - rhel92-large
  expansions:
    <<: [*amazon_linux2_x86_64]
  tasks:
  - name: docker_build
  - name: compile
  - name: test

- name: al2023-aarch64
  tags: ["pr_check"]
  display_name: Amazon Linux 2023 (aarch64)
  run_on:
    # Tasks run in Amazon Linux 2023 containers, so the Linux distro doesn't have to match.
    - rhel92-arm64-large
  expansions:
    <<: [*amazon_linux2023_aarch64]
  tasks:
  - name: docker_build
  - name: compile
  - name: test

- name: al2023-x86_64
  tags: ["pr_check"]
  display_name: Amazon Linux 2023 (x86_64)
  run_on:
    # Tasks run in Amazon Linux 2023 containers, so the Linux distro doesn't have to match.
    - rhel92-large
  expansions:
    <<: [*amazon_linux2023_x86_64]
  tasks:
  - name: docker_build
  - name: compile
  - name: test
