trigger:
  branches:
    include:
    - "main"
    - "release/v*"
  tags:
    include:
    - "v*"


# PR build config is manually overridden in Azure pipelines UI with different secrets
pr: none


variables:
- name: isDev
  # This must be checked/set in a `step` from the VERSION.txt file, in order to be useful
  value: true
- name: isMain
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
- name: isReleaseBranch
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/v')]
- name: isTaggedRelease
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]
- name: isStableBranch
  # A release branch can be either `main` or a `release/v1.x` stable branch
  value: $[or(eq(variables['isMain'], 'true'), eq(variables['isReleaseBranch'], 'true'))]

## CI runs
# Any scheduled run
- name: pipelineScheduled
  value: ${{ eq(variables['Build.Reason'], 'Schedule') }}
# Non-scheduled postsubmit run
- name: pipelinePostsubmit
  value: ${{ and(eq(variables['Build.DefinitionName'], 'envoy-postsubmit'), ne(variables.pipelineScheduled, true)) }}
- name: pipelineCacheWarm
  value: ${{ and(eq(variables['Build.DefinitionName'], 'envoy-presubmit'), ne(variables['Build.Reason'], 'PullRequest')) }}
# Any other run (ie PRs)
- name: pipelineDefault
  value: ${{ and(ne(variables.pipelineScheduled, true), ne(variables.pipelinePostubmit, true), ne(variables.pipelineCacheWarm, true)) }}

## Variable settings
# Caches (tip: append a version suffix while testing caches)
- name: cacheKeyBuildImage
  value: v0
- name: cacheKeyDockerBuild
  value: v0
- name: cacheKeyRepository
  value: './WORKSPACE | **/*.bzl, !mobile/**, !envoy-docs/**'


stages:

# Presubmit/default
- ${{ if eq(variables.pipelineDefault, true) }}:
  - template: stages.yml

# Scheduled run anywhere
- ${{ if eq(variables.pipelineScheduled, true) }}:
  - template: stages.yml
    parameters:
      cacheTestResults: false

# Cache warming in presubmit
- ${{ if eq(variables.pipelineCacheWarm, true) }}:
  - template: stages.yml
    parameters:
      buildStageDeps:
      - env
      checkStageDeps:
      - env
      checksConcurrency: 10
      macBuildStageDeps:
      - env
      windowsBuildStageDeps:
      - env

# Postsubmit main/release branches
- ${{ if eq(variables.pipelinePostsubmit, true) }}:
  - template: stages.yml
    parameters:
      buildStageDeps:
      - env
      checkStageDeps:
      - env
      checksConcurrency: 10
      macBuildStageDeps:
      - env
      windowsBuildStageDeps:
      - env
