
parameters:

# Auth
- name: authGCP
  type: string
  default: ""

- name: runBuild
  displayName: "Run build"
  type: string
  default: true

jobs:
- job: test
  displayName: Build and test
  condition: |
    and(not(canceled()),
        eq(${{ parameters.runBuild }}, 'true'))
  timeoutInMinutes: 180
  pool:
    vmImage: "macos-11"
  steps:
  - script: ./ci/mac_ci_setup.sh
    displayName: "Install dependencies"

  - script: ./ci/mac_ci_steps.sh
    displayName: "Run Mac CI"
    env:
      BAZEL_BUILD_EXTRA_OPTIONS: "--remote_download_toplevel --flaky_test_attempts=2"
      BAZEL_REMOTE_CACHE: grpcs://remotebuildexecution.googleapis.com
      BAZEL_REMOTE_INSTANCE: projects/envoy-ci/instances/default_instance
      GCP_SERVICE_ACCOUNT_KEY: ${{ parameters.authGCP }}

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: "**/bazel-testlogs/**/test.xml"
      testRunTitle: "macOS"
    timeoutInMinutes: 10
    condition: always()

- job: tested
  displayName: Complete
  dependsOn: ["test"]
  pool:
    vmImage: "ubuntu-20.04"
  # This condition ensures that this (required) job passes if all of
  # the preceeding jobs either pass or are skipped
  # adapted from:
  #   https://learn.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#job-to-job-dependencies-within-one-stage
  condition: and(eq(variables['Build.Reason'], 'PullRequest'), in(dependencies.test.result, 'Succeeded', 'SucceededWithIssues', 'Skipped'))
  steps:
  - checkout: none
  - bash: |
      echo "macos tested"
